version: '3'
services:

  # api:
  #   container_name: api
  #   image: node-express:1.0
  #   build: ./api
  #   tty: true
  #   volumes:
  #     - ./api/source:/api
  #   ports:
  #     - 3000:3000

  webpack:
    container_name: webpack_container
    image: webpack:1.0
    build: ./webpack
    ports:
      - 8000:8000
    volumes:
      - ./webpack/webpack.config.js:/app/webpack.config.js
      - ./webpack/.babelrc:/app/.babelrc
      - ./webpack/package.json:/app/package.json
      - ./app/src:/app/src:ro
      - ./app/dist:/app/dist:z

  nginx:
    container_name: nginx_container
    image: nginx:1.0
    build: ./nginx
    ports:
      - 10080:80
      # - 443:443
    volumes:
      - ./app/dist:/var/www/develop:ro
      - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
      - ./logs:/var/log/nginx
    environment:
      - TZ=${TZ}
    depends_on:
      - php

  php:
    container_name: php-fpm_container
    image: php-fpm:1.0
    build: ./php
    env_file: .env
    args:
      - TZ=${TZ}
    volumes:
      - ./app/dist:/var/www/develop:ro
    depends_on:
      - db

  mysql:
    container_name: mysql_container
    image: mysql:1.0
    build: ./mysql
    # user: '1000:50'
    # command: '--innodb_use_native_aio=0'
    ports:
      - 13306:3306
    volumes:
      # - db-store:/var/lib/mysql
      - ./mysql/data:/var/lib/mysql
      - ./logs:/var/log/mysql
      - ./mysql/app.cnf:/etc/mysql/conf.d/app.cnf
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - TZ=${TZ}

volumes:
  db-store:
